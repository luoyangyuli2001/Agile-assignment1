{"version":3,"file":"static/js/669.9e4705d2.chunk.js","mappings":"gSAYMA,EAAU,CACd,CACEC,MAAO,EACPC,MAAO,aAET,CACED,MAAO,EACPC,MAAO,QAET,CACED,MAAO,EACPC,MAAO,WAET,CACED,MAAO,EACPC,MAAO,QAET,CACED,MAAO,EACPC,MAAO,aAILC,EAAS,CACbC,KAAM,CACJC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,QAEdC,KAAM,CACJC,MAAO,OACP,SAAU,CACRL,UAAW,IAGfM,UAAW,CACTD,MAAO,QAETE,OAAQ,CACNC,YAAa,GAEfC,MAAO,CACLJ,MAAO,MACP,SAAU,CACRA,MAAO,UA2Kb,EAtKmB,SAAC,GAAe,IAAbK,EAAY,EAAZA,MACdC,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GAC3B,GAA4BC,EAAAA,EAAAA,UAAS,GAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwBF,EAAAA,EAAAA,WAAS,GAAjC,eAAOG,EAAP,KAAaC,EAAb,KACMC,GAAWC,EAAAA,EAAAA,MASjB,GAKIC,EAAAA,EAAAA,IAZkB,CACpBC,OAAQ,GACRC,OAAQ,GACRC,OAAO,EACPT,OAAQ,MAIRU,EADF,EACEA,QACaC,EAFf,EAEEC,UAAaD,OACbE,EAHF,EAGEA,aACAC,EAJF,EAIEA,MAGIC,EAAmB,SAACC,GACxBb,GAAQ,GACRC,EAAS,oBACV,EAEKa,EAAqB,SAACD,GAC1Bf,EAAUe,EAAME,OAAOrC,MACxB,EAUD,OACE,UAACsC,EAAA,EAAD,CAAKC,UAAU,MAAMC,GAAItC,EAAOC,KAAhC,WACE,SAACsC,EAAA,EAAD,CAAYF,UAAU,KAAKG,QAAQ,KAAnC,6BAGA,SAACC,EAAA,EAAD,CACEH,GAAItC,EAAOW,MACX+B,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CzB,KAAMA,EACN0B,QAASb,EAJX,UAME,SAAC,IAAD,CACEc,SAAS,UACTN,QAAQ,SACRK,QAASb,EAHX,UAKE,SAACO,EAAA,EAAD,CAAYC,QAAQ,KAApB,oDAMJ,kBAAMF,GAAItC,EAAOM,KAAMyC,SAAUjB,GA9BpB,SAACL,GAChBA,EAAOuB,QAAUpC,EAAMqC,GACvBxB,EAAOR,OAASA,EAEhBJ,EAAQqC,UAAUtC,EAAOa,GACzBL,GAAQ,EACT,IAwB4D+B,YAAU,EAAnE,WACE,SAAC,KAAD,CACEC,KAAK,SACLzB,QAASA,EACT0B,MAAO,CAAEC,SAAU,oBACnBC,aAAa,GACbC,OAAQ,oBAAGC,MAASC,EAAZ,EAAYA,SAAU5D,EAAtB,EAAsBA,MAAtB,OACN,SAAC6D,EAAA,EAAD,CACErB,GAAI,CAAE/B,MAAO,QACbiC,QAAQ,WACRoB,OAAO,SACPN,UAAQ,EACRI,SAAUA,EACV5D,MAAOA,EACPmD,GAAG,SACHlD,MAAM,gBACNqD,KAAK,SACLS,WAAS,GAXL,IAeTjC,EAAOJ,SACN,SAACe,EAAA,EAAD,CAAYC,QAAQ,KAAKH,UAAU,IAAnC,SACGT,EAAOJ,OAAOsC,WAGnB,SAAC,KAAD,CACEV,KAAK,SACLzB,QAASA,EACT0B,MAAO,CACLC,SAAU,0BACVS,UAAW,CAAEjE,MAAO,GAAIgE,QAAS,wBAEnCP,aAAa,GACbC,OAAQ,oBAAGC,MAASC,EAAZ,EAAYA,SAAU5D,EAAtB,EAAsBA,MAAtB,OACN,SAAC6D,EAAA,EAAD,CACEnB,QAAQ,WACRoB,OAAO,SACPN,UAAQ,EACRU,WAAS,EACTZ,KAAK,SACLtD,MAAOA,EACP4D,SAAUA,EACV3D,MAAM,cACNkD,GAAG,SACHgB,WAAS,EACTC,QAAS,IAZL,IAgBTtC,EAAOH,SACN,SAACc,EAAA,EAAD,CAAYC,QAAQ,KAAKH,UAAU,IAAnC,SACGT,EAAOH,OAAOqC,WAInB,SAAC,KAAD,CACEnC,QAASA,EACTyB,KAAK,SACLI,OAAQ,oBAAGC,MAAH,EAAYC,SAAZ,EAAsB5D,MAAtB,OACN,SAAC6D,EAAA,EAAD,CACEV,GAAG,gBACHkB,QAAM,EACN3B,QAAQ,WACRzC,MAAM,gBACND,MAAOmB,EACPyC,SAAUxB,EACVkC,WAAW,2BAPb,SASGvE,EAAQwE,KAAI,SAACC,GAAD,OACX,SAACC,EAAA,EAAD,CAA6BzE,MAAOwE,EAAOxE,MAA3C,SACGwE,EAAOvE,OADKuE,EAAOxE,MADX,KAVT,KAmBV,UAACsC,EAAA,EAAD,CAAKE,GAAItC,EAAOwE,QAAhB,WACE,SAACC,EAAA,EAAD,CACEC,KAAK,SACLlC,QAAQ,YACRmC,MAAM,UACNrC,GAAItC,EAAOS,OAJb,qBAQA,SAACgE,EAAA,EAAD,CACEC,KAAK,QACLlC,QAAQ,YACRmC,MAAM,YACNrC,GAAItC,EAAOS,OACXmE,QAAS,WACP7C,EAAM,CACJP,OAAQ,GACRqD,QAAS,IAEZ,EAVH,2BAkBT,E,8BCnMD,EAvBwB,SAACC,GACvB,IACM9B,GADW+B,EAAAA,EAAAA,MACQC,MAAMhC,QAE/B,GAAmDiC,EAAAA,EAAAA,UACjD,CAAC,QAAS,CAAEhC,GAAID,IAChBkC,EAAAA,IAFYtE,EAAd,EAAQuE,KAAaC,EAArB,EAAqBA,MAAOC,EAA5B,EAA4BA,UAAWC,EAAvC,EAAuCA,QAKvC,OAAID,GACK,SAAC,IAAD,IAGLC,GACK,wBAAKF,EAAMtB,WAGlB,SAAC,IAAD,CAAclD,MAAOA,EAArB,UACE,SAAC,EAAD,CAAYA,MAAOA,KAGxB,C","sources":["components/reviewForm/index.js","pages/addMovieReviewPage.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { MoviesContext } from \"../../contexts/moviesContext\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ratings = [\r\n  {\r\n    value: 5,\r\n    label: \"Excellent\",\r\n  },\r\n  {\r\n    value: 4,\r\n    label: \"Good\",\r\n  },\r\n  {\r\n    value: 3,\r\n    label: \"Average\",\r\n  },\r\n  {\r\n    value: 2,\r\n    label: \"Poor\",\r\n  },\r\n  {\r\n    value: 0,\r\n    label: \"Terrible\",\r\n  },\r\n];\r\n\r\nconst styles = {\r\n  root: {\r\n    marginTop: 2,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"left\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    \"& > * \": {\r\n      marginTop: 2,\r\n    },\r\n  },\r\n  textField: {\r\n    width: \"40ch\",\r\n  },\r\n  submit: {\r\n    marginRight: 2,\r\n  },\r\n  snack: {\r\n    width: \"50%\",\r\n    \"& > * \": {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n};\r\n\r\nconst ReviewForm = ({ movie }) => {\r\n  const context = useContext(MoviesContext);\r\n  const [rating, setRating] = useState(3);\r\n  const [open, setOpen] = useState(false); \r\n  const navigate = useNavigate();\r\n\r\n  const defaultValues = {\r\n    author: \"\",\r\n    review: \"\",\r\n    agree: false,\r\n    rating: \"3\",\r\n  };\r\n\r\n  const {\r\n    control,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    reset,\r\n  } = useForm(defaultValues);\r\n\r\n  const handleSnackClose = (event) => {\r\n    setOpen(false);\r\n    navigate(\"/movies/favorites\");\r\n  };\r\n\r\n  const handleRatingChange = (event) => {\r\n    setRating(event.target.value);\r\n  };\r\n\r\n  const onSubmit = (review) => {\r\n    review.movieId = movie.id;\r\n    review.rating = rating;\r\n    // console.log(review);\r\n    context.addReview(movie, review);\r\n    setOpen(true); // NEW\r\n  };\r\n\r\n  return (\r\n    <Box component=\"div\" sx={styles.root}>\r\n      <Typography component=\"h2\" variant=\"h3\">\r\n        Write a review\r\n      </Typography>\r\n      <Snackbar\r\n        sx={styles.snack}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        open={open}\r\n        onClose={handleSnackClose}\r\n      >\r\n        <MuiAlert\r\n          severity=\"success\"\r\n          variant=\"filled\"\r\n          onClose={handleSnackClose}\r\n        >\r\n          <Typography variant=\"h4\">\r\n            Thank you for submitting a review\r\n          </Typography>\r\n        </MuiAlert>\r\n      </Snackbar>\r\n\r\n      <form sx={styles.form} onSubmit={handleSubmit(onSubmit)} noValidate>\r\n        <Controller\r\n          name=\"author\"\r\n          control={control}\r\n          rules={{ required: \"Name is required\" }}\r\n          defaultValue=\"\"\r\n          render={({ field: { onChange, value } }) => (\r\n            <TextField\r\n              sx={{ width: \"40ch\" }}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              onChange={onChange}\r\n              value={value}\r\n              id=\"author\"\r\n              label=\"Author's name\"\r\n              name=\"author\"\r\n              autoFocus\r\n            />\r\n          )}\r\n        />\r\n        {errors.author && (\r\n          <Typography variant=\"h6\" component=\"p\">\r\n            {errors.author.message}\r\n          </Typography>\r\n        )}\r\n        <Controller\r\n          name=\"review\"\r\n          control={control}\r\n          rules={{\r\n            required: \"Review cannot be empty.\",\r\n            minLength: { value: 10, message: \"Review is too short\" },\r\n          }}\r\n          defaultValue=\"\"\r\n          render={({ field: { onChange, value } }) => (\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"review\"\r\n              value={value}\r\n              onChange={onChange}\r\n              label=\"Review text\"\r\n              id=\"review\"\r\n              multiline\r\n              minRows={10}\r\n            />\r\n          )}\r\n        />\r\n        {errors.review && (\r\n          <Typography variant=\"h6\" component=\"p\">\r\n            {errors.review.message}\r\n          </Typography>\r\n        )}\r\n\r\n        <Controller\r\n          control={control}\r\n          name=\"rating\"\r\n          render={({ field: { onChange, value } }) => (\r\n            <TextField\r\n              id=\"select-rating\"\r\n              select\r\n              variant=\"outlined\"\r\n              label=\"Rating Select\"\r\n              value={rating}\r\n              onChange={handleRatingChange}\r\n              helperText=\"Don't forget your rating\"\r\n            >\r\n              {ratings.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          )}\r\n        />\r\n\r\n        <Box sx={styles.buttons}>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            sx={styles.submit}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Button\r\n            type=\"reset\"\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            sx={styles.submit}\r\n            onClick={() => {\r\n              reset({\r\n                author: \"\",\r\n                content: \"\",\r\n              });\r\n            }}\r\n          >\r\n            Reset\r\n          </Button>\r\n        </Box>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ReviewForm;","import React from \"react\";\r\nimport PageTemplate from \"../components/templateMoviePage\";\r\nimport ReviewForm from \"../components/reviewForm\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useQuery } from \"react-query\";\r\nimport { getMovie } from \"../api/tmdb-api\";\r\nimport Spinner from \"../components/spinner\";\r\n\r\nconst WriteReviewPage = (props) => {\r\n  const location = useLocation();\r\n  const movieId = location.state.movieId;\r\n\r\n  const { data: movie, error, isLoading, isError } = useQuery(\r\n    [\"movie\", { id: movieId }],\r\n    getMovie\r\n  );\r\n\r\n  if (isLoading) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  if (isError) {\r\n    return <h1>{error.message}</h1>;\r\n  }\r\n  return (\r\n    <PageTemplate movie={movie}>\r\n      <ReviewForm movie={movie} />\r\n    </PageTemplate>\r\n  );\r\n};\r\n\r\nexport default WriteReviewPage;"],"names":["ratings","value","label","styles","root","marginTop","display","flexDirection","alignItems","form","width","textField","submit","marginRight","snack","movie","context","useContext","MoviesContext","useState","rating","setRating","open","setOpen","navigate","useNavigate","useForm","author","review","agree","control","errors","formState","handleSubmit","reset","handleSnackClose","event","handleRatingChange","target","Box","component","sx","Typography","variant","Snackbar","anchorOrigin","vertical","horizontal","onClose","severity","onSubmit","movieId","id","addReview","noValidate","name","rules","required","defaultValue","render","field","onChange","TextField","margin","autoFocus","message","minLength","fullWidth","multiline","minRows","select","helperText","map","option","MenuItem","buttons","Button","type","color","onClick","content","props","useLocation","state","useQuery","getMovie","data","error","isLoading","isError"],"sourceRoot":""}