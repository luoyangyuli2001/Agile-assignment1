{"version":3,"file":"static/js/655.ff73d529.chunk.js","mappings":"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","sources":["pages/registerPage.js","../node_modules/@mui/material/esm/CssBaseline/CssBaseline.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { auth, registerWithEmailAndPassword, signInWithGoogle } from \"../firebase\";\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Paper from '@mui/material/Paper';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst RegisterPage = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [user] = useAuthState(auth);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const register = () => {\r\n    registerWithEmailAndPassword(name, email, password);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user) navigate(\"/\");\r\n  }, [user, navigate]);\r\n\r\n  return (\r\n    <Grid container component=\"main\" sx={{ height: '100vh' }}>\r\n      <CssBaseline />\r\n      <Grid\r\n        item\r\n        xs={false}\r\n        sm={4}\r\n        md={7}\r\n        sx={{\r\n          backgroundImage: 'url(https://source.unsplash.com/random)',\r\n          backgroundRepeat: 'no-repeat',\r\n          backgroundColor: (t) =>\r\n            t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\r\n          backgroundSize: 'cover',\r\n          backgroundPosition: 'center',\r\n        }}\r\n      />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <Box\r\n          sx={{\r\n            my: 8,\r\n            mx: 4,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Register\r\n          </Typography>\r\n          <Box component=\"form\" noValidate sx={{ mt: 1 }}> \r\n            <TextField\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"name\"\r\n              label=\"Name\"\r\n              name=\"name\"\r\n              autoComplete=\"name\"\r\n              autoFocus\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              onClick={register}\r\n            >\r\n              Register\r\n            </Button>\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              onClick={signInWithGoogle}\r\n            >\r\n              Register with Google\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link to=\"/login\" variant=\"body2\">\r\n                  Already have an account?\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nexport default RegisterPage;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useThemeProps from '../styles/useThemeProps';\nimport GlobalStyles from '../GlobalStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const html = (theme, enableColorScheme) => _extends({\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box',\n  // Fix font resize problem in iOS\n  WebkitTextSizeAdjust: '100%'\n}, enableColorScheme && {\n  colorScheme: theme.palette.mode\n});\nexport const body = theme => _extends({\n  color: (theme.vars || theme).palette.text.primary\n}, theme.typography.body1, {\n  backgroundColor: (theme.vars || theme).palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: (theme.vars || theme).palette.common.white\n  }\n});\nexport const styles = (theme, enableColorScheme = false) => {\n  var _theme$components, _theme$components$Mui;\n\n  let defaultStyles = {\n    html: html(theme, enableColorScheme),\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: _extends({\n      margin: 0\n    }, body(theme), {\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: (theme.vars || theme).palette.background.default\n      }\n    })\n  };\n  const themeOverrides = (_theme$components = theme.components) == null ? void 0 : (_theme$components$Mui = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components$Mui.styleOverrides;\n\n  if (themeOverrides) {\n    defaultStyles = [defaultStyles, themeOverrides];\n  }\n\n  return defaultStyles;\n};\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\n\nfunction CssBaseline(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCssBaseline'\n  });\n  const {\n    children,\n    enableColorScheme = false\n  } = props;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GlobalStyles, {\n      styles: theme => styles(theme, enableColorScheme)\n    }), children]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   * @default false\n   */\n  enableColorScheme: PropTypes.bool\n} : void 0;\nexport default CssBaseline;"],"names":["useState","email","setEmail","password","setPassword","name","setName","useAuthState","auth","user","navigate","useNavigate","useEffect","container","component","sx","height","item","xs","sm","md","backgroundImage","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","Paper","elevation","square","my","mx","display","flexDirection","alignItems","variant","noValidate","mt","margin","fullWidth","id","label","autoComplete","autoFocus","value","onChange","e","target","required","type","mb","onClick","registerWithEmailAndPassword","signInWithGoogle","to","html","theme","enableColorScheme","_extends","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","WebkitTextSizeAdjust","colorScheme","body","color","vars","text","primary","typography","body1","background","default","common","white","inProps","props","useThemeProps","children","_jsxs","React","_jsx","GlobalStyles","styles","_theme$components","_theme$components$Mui","defaultStyles","fontWeight","fontWeightBold","themeOverrides","components","MuiCssBaseline","styleOverrides"],"sourceRoot":""}